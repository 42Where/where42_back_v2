plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}
bootJar{
	archivesBaseName = 'where42'
	def archiveVersion = "2.3"
	archiveFileName = "where42-${archiveVersion}.jar"
}

group = 'kr.where42'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.retry:spring-retry'
	implementation 'org.springframework:spring-aspects'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	testImplementation 'junit:junit:4.13.1'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
//	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'io.micrometer:micrometer-registry-prometheus'
	//about security
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'
	//about jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

//def projectDir = "."
//def reactDir = "$projectDir/src/main/where42";
//
//sourceSets{
//	main{
//		resources{
//			srcDirs = ["$projectDir/src/main/resources"]
//		}
//	}
//}

//processResources{
//	dependsOn "copyReactBuildFiles"
//}
//
//task installReact(type:Exec){
//	workingDir "$reactDir"
//	inputs.dir "$reactDir"
//	group = BasePlugin.BUILD_GROUP
//
//	if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
//		commandLine "npm.cmd", "audit", "fix"
//		commandLine 'npm.cmd', 'install'
//	}else{
//		commandLine "npm", "audit", "fix"
//		commandLine 'npm', 'install'
//	}
//}
//
//task buildReact(type:Exec){
//	dependsOn "installReact"
//	workingDir "$reactDir"
//	inputs.dir "$reactDir"
//	group = BasePlugin.BUILD_GROUP
//
//	if(System.getProperty('os.name').toLowerCase(Locale.ROOT).contains('windows')){
//		commandLine "npm.cmd", "run-script", "build"
//	}else{
//		commandLine "npm", "run-script", "build"
//	}
//}
//
//task copyReactBuildFiles(type:Copy){
//	dependsOn "buildReact"
//	from "$reactDir/build"
//	into "$projectDir/src/main/resources/static"
//}
//
//tasks.named('test') {
//	useJUnitPlatform()
//}
